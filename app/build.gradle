apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.planb.threadpool.shrink'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.planb.thread"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


}
threadPoolShrinkOptions {
    // 是否启用插件，如果想禁用建议直接控制apply plugin，效率会更高些
    enabled true

    // 日志开关
    debug true

    // 自己定义的线程池，会使用这个线程池替换项目中的线程池；
    // 线程池类型为ThreadPoolExecutor，签名可以是两种：
    // 1. 静态线程池对象；格式为：{className}.{staticField}
    // 2. 静态方法，返回线程池；格式为：{className}.{staticMethod}()
    defaultExecutorSignature 'com.planb.thread.DefaultThreadPoolExecutor.defaultExecutor'

    // 同defaultExecutorSignature，线程池类型为ScheduledThreadPoolExecutor;
    defaultScheduledExecutorSignature 'com.planb.thread.DefaultThreadPoolExecutor.defaultScheduledExecutor'

    // 不处理的类或包名
    classSignaturePrefixFilter =  [
            'com.planb.thread.ExcludeThreadPoolActivity'
    ]

    // 配置不打印的方法调用，默认打印线程池除了以外所有的方法调用；
    executorMethodPrintFilter = [
            'execute',
    ]
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation project(':test')
}